{{- if and .Values.usePassword (not .Values.existingSecret) }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ template "common.names.fullname" . }}-provider
  namespace: {{ .Release.Namespace | quote }}
spec:
  provider: {{ .Values.secretProvider }}
  secretObjects:
    - secretName: {{ template "common.names.fullname" . }}
      type: Opaque
      data:
        - objectName: redis-password
          key: redis-password
  parameters:
    {{- if eq .Values.secretProvider "aws" }}
    objects: |
      - objectName: "redis-password"
        objectType: "secretsmanager"
        objectAlias: "redis-password"
    {{- else if eq .Values.secretProvider "azure" }}
    keyvaultName: {{ .Values.keyVaultName }}
    tenantId: {{ .Values.azureTenantID }}
    usePodIdentity: "false"
    objects: |
      array:
        - |
          objectName: "redis-password"
          objectType: "secret"
          objectAlias: "redis-password"
    {{- else if eq .Values.secretProvider "gcp" }}
    secrets:
      - resourceName: "projects/{{ .Values.gcpProjectID }}/secrets/PDP_REDIS_PASSWORD/versions/latest"
        path: "redis-password"
    {{- else if eq .Values.secretProvider "vault" }}
    vaultAddress: {{ .Values.hcVaultAddress }}
    roleName: "redis-cluster"
    objects: |
      - objectName: "redis-password"
        secretPath: "secret/data/redis-cluster"
        secretKey: "redis-password"
    {{- end }}
{{- end }}