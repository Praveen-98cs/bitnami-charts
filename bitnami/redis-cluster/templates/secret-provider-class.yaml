{{- if and .Values.usePassword (not .Values.existingSecret) }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ template "common.names.fullname" . }}-provider
  namespace: {{ .Release.Namespace | quote }}
spec:
  provider: {{ .Values.global.secretProvider }}
  secretObjects:
    - secretName: {{ template "common.names.fullname" . }}
      type: Opaque
      data:
        - objectName: redis-password
          key: redis-password
  parameters:
    {{- if eq .Values.global.secretProvider "azure" }}
    keyvaultName: {{ .Values.global.keyVaultName }}
    tenantId: {{ .Values.global.azureTenantID }}
    usePodIdentity: "false"
    objects: |
      array:
        - |
          objectName: {{ .Values.global.secrets.redisPasswordKVRef | quote }}
          objectType: secret
          objectAlias: redis-password
          objectVersion: {{ .Values.global.secrets.redisPassword | quote }}
    {{- else if eq .Values.global.secretProvider "vault" }}
    vaultAddress: {{ .Values.global.hcVaultAddress }}
    roleName: vault
    objects: |
      - objectName: redis-password
        secretPath: {{ .Values.global.secrets.redisPasswordKVRef | quote }}
        secretKey: redis-password
    {{- end }}
{{- end }}